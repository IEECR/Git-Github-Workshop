---------- MODULE 5: What makes a good repository ----------

In this module, you will create a repository structure for a bunch of pseudo files representing the types of files
you find in a research project. You will also create a gitignore file and fill the README.md with sensible information.

---------- Steps:
1. We prepared pseudo data here, download them: sciebo-url
   Move them into the repository you created in module 4.
2. Create different directories and sort the files into them.
   Which repository structure makes the most sense to you?
3. Create a gitignore file
   In science projects, there are often data of huge size that you do not want to track with Git.
   Furthermore, auxiliary files that are generated when writing code for example, you ideally do not want to track.
   This is done using a gitignore file. Create a new file and name it '.gitignore' (no extension!)
4. Now you can enter all paths to directories and files that should be ignored and save. Stage, Commit, Push.
    Note: there are good templates for gitignore files for different application cases (see links below);
          when creating a Github repository online, you can select a template and the gitignore file is automatically created.
    Note: if you want to add files/directories to the gitignore file that you had already staged and commited,
          this is a bit more complicated; first type 'git rm --chached file-or-folder-to-add-to-gitignore', then commit.
5. Edit the README.md and enter all important information. What do you think should be in it? Stage, commit, push.


---------- Helpful links:
Some information on the gitignore file: https://linuxize.com/post/gitignore-ignoring-files-in-git/
gitignore templates: https://github.com/github/gitignore
gitignore (incl. section on ignoring previously committed files): https://www.atlassian.com/git/tutorials/saving-changes/gitignore